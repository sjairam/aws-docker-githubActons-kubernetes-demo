name: cd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env: 
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: nodehelloworld
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)

jobs:
  run-tests:
    strategy:
      matrix:
        version: [12, 14, 16, 18, 19]
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Test
      run: |
        cd site
        npm install
        npm test

  run-security-tests:
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          # Move Snyk Token
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
            command: code test

  build:  
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - run-tests

    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
 
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        cd site
        docker image build \
        --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest \
        --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.SHORT_SHA }} \
        .
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.SHORT_SHA }}

    - name: Install and configure kubectl
      run: |
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        # https://github.com/aws/aws-cli/issues/6920#issuecomment-1117981158
        VERSION=v1.23.6
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
          --progress-bar \
          --location \
          --remote-name
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/     

  deploy:
    runs-on: ubuntu-latest
    needs:
        - build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1
        
    - name: Install kubectl
      run: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
        
    - name: Set kubectl context
      run: |
            aws eks --region eu-west-1 update-kubeconfig --name Node-Hello-Cluster
            #Removal of static names
            kubectl config use-context arn:aws:eks:eu-west-1:635945813960:cluster/Node-Hello-Cluster
        
    - name: Deploy to Kubernetes
      run: |
            kubectl apply -f k8s/deployment.yml